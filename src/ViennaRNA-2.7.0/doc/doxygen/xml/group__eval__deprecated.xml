<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__eval__deprecated" kind="group">
    <compoundname>eval_deprecated</compoundname>
    <title>Deprecated Interface for Free Energy Evaluation</title>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group__eval__deprecated_1gab9b2c3a37a5516614c06d0ab54b97cda" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int cut_point</definition>
        <argsstring></argsstring>
        <name>cut_point</name>
        <briefdescription>
<para>first pos of second seq for cofolding </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/basic.h" line="51" column="13" declfile="ViennaRNA/eval/basic.h" declline="51" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="group__eval__deprecated_1ga567530678f6260a1a649a5beca5da4c5" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int eos_debug</definition>
        <argsstring></argsstring>
        <name>eos_debug</name>
        <briefdescription>
<para>verbose info from energy_of_struct </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/basic.h" line="56" column="13" declfile="ViennaRNA/eval/basic.h" declline="56" declcolumn="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__eval__deprecated_1gaf5040810fb306e7a24a94556b4d1e868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_eval_ext_stem</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j)</argsstring>
        <name>vrna_eval_ext_stem</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/exterior.h" line="174" column="17" declfile="ViennaRNA/eval/exterior.h" declline="174" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga51f9851f3500c2aae66674142a6a2dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int E_Stem</definition>
        <argsstring>(int type, int si1, int sj1, int extLoop, vrna_param_t *P)</argsstring>
        <name>E_Stem</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extLoop</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>Compute the energy contribution of a stem branching off a loop-region. </para>
        </briefdescription>
        <detaileddescription>
<para>This function computes the energy contribution of a stem that branches off a loop region. This can be the case in multiloops, when a stem branching off increases the degree of the loop but also <emphasis>immediately interior base pairs</emphasis> of an exterior loop contribute free energy. To switch the behavior of the function according to the evaluation of a multiloop- or exterior-loop-stem, you pass the flag &apos;extLoop&apos;. The returned energy contribution consists of a TerminalAU penalty if the pair type is greater than 2, dangling end contributions of mismatching nucleotides adjacent to the stem if only one of the si1, sj1 parameters is greater than 0 and mismatch energies if both mismatching nucleotides are positive values. Thus, to avoid incorporating dangling end or mismatch energies just pass a negative number, e.g. -1 to the mismatch argument.</para>
<para>This is an illustration of how the energy contribution is assembled: <preformatted>
      3&apos;  5&apos;
      |   |
      X - Y
5&apos;-si1     sj1-3&apos;
</preformatted></para>
<para>Here, (X,Y) is the base pair that closes the stem that branches off a loop region. The nucleotides si1 and sj1 are the 5&apos;- and 3&apos;- mismatches, respectively. If the base pair type of (X,Y) is greater than 2 (i.e. an A-U or G-U pair, the TerminalAU penalty will be included in the energy contribution returned. If si1 and sj1 are both nonnegative numbers, mismatch energies will also be included. If one of si1 or sj1 is a negative value, only 5&apos; or 3&apos; dangling end contributions are taken into account. To prohibit any of these mismatch contributions to be incorporated, just pass a negative number to both, si1 and sj1. In case the argument extLoop is 0, the returned energy contribution also includes the <emphasis>internal-loop-penalty</emphasis> of a multiloop stem with closing pair type.</para>
<para><simplesect kind="note"><para>This function is threadsafe</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__eval__loops__mb_1ga4df9d02217343b879549725fcebbc9ec" kindref="member">vrna_E_multibranch_stem()</ref>, _ExtLoop()</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000143"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Please use one of the functions <ref refid="group__eval__loops__ext_1gad15211d536d971e3c335813a75897a26" kindref="member">vrna_E_exterior_stem()</ref> and <ref refid="group__eval__loops__mb_1ga4df9d02217343b879549725fcebbc9ec" kindref="member">vrna_E_multibranch_stem()</ref> instead! Use the former for cases where <computeroutput>extLoop</computeroutput> != 0 and the latter otherwise.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair type of the first base pair un the stem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>si1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 5&apos;-mismatching nucleotide </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sj1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3&apos;-mismatching nucleotide </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extLoop</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag that indicates whether the contribution reflects the one of an exterior loop or not </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>The data structure containing scaled energy parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Free energy of the branch off the loop in dcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/exterior.h" line="233" column="17" declfile="ViennaRNA/eval/exterior.h" declline="233" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga05c6288c5a79d3bd5ad6d33c1bb34bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int E_ExtLoop</definition>
        <argsstring>(int type, int si1, int sj1, vrna_param_t *P)</argsstring>
        <name>E_ExtLoop</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/exterior.h" line="241" column="17" declfile="ViennaRNA/eval/exterior.h" declline="241" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gaa0c313c90da11aa741dcd62746d85337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_E_ext_stem</definition>
        <argsstring>(unsigned int type, int n5d, int n3d, vrna_param_t *p)</argsstring>
        <name>vrna_E_ext_stem</name>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n5d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3d</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/exterior.h" line="249" column="17" declfile="ViennaRNA/eval/exterior.h" declline="249" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga357484958d3cd677f88f16c75c8a5730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>FLT_OR_DBL vrna_exp_E_ext_stem</definition>
        <argsstring>(unsigned int type, int n5d, int n3d, vrna_exp_param_t *p)</argsstring>
        <name>vrna_exp_E_ext_stem</name>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n5d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3d</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/exterior.h" line="256" column="24" declfile="ViennaRNA/eval/exterior.h" declline="256" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga446828a191c127861e76e2c84055f672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>FLT_OR_DBL exp_E_ExtLoop</definition>
        <argsstring>(int type, int si1, int sj1, vrna_exp_param_t *P)</argsstring>
        <name>exp_E_ExtLoop</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the partition function variant of E_ExtLoop() <xrefsect id="deprecated_1_deprecated000144"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use vrna_exp_E_ext_stem() instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para>E_ExtLoop()</para>
</simplesect>
<simplesect kind="return"><para>The Boltzmann weighted energy contribution of the introduced exterior-loop stem </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/exterior.h" line="272" column="24" declfile="ViennaRNA/eval/exterior.h" declline="272" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gab0aa9833ab41875a91a9be8a5ffd7092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>FLT_OR_DBL exp_E_Stem</definition>
        <argsstring>(int type, int si1, int sj1, int extLoop, vrna_exp_param_t *P)</argsstring>
        <name>exp_E_Stem</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extLoop</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><heading level="2">Compute the Boltzmann weighted energy contribution of a stem branching off a loop-region</heading>
</para>
<para>This is the partition function variant of <ref refid="group__eval__deprecated_1ga51f9851f3500c2aae66674142a6a2dd5" kindref="member">E_Stem()</ref></para>
<para><simplesect kind="note"><para>This function is threadsafe</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__eval__deprecated_1ga51f9851f3500c2aae66674142a6a2dd5" kindref="member">E_Stem()</ref></para>
</simplesect>
<simplesect kind="return"><para>The Boltzmann weighted energy contribution of the branch off the loop </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/exterior.h" line="291" column="24" declfile="ViennaRNA/eval/exterior.h" declline="291" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gaac01109b95889c27943e781f4a3ab0b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int E_Hairpin</definition>
        <argsstring>(int size, int type, int si1, int sj1, const char *string, vrna_param_t *P)</argsstring>
        <name>E_Hairpin</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>Compute the Energy of a hairpin-loop. </para>
        </briefdescription>
        <detaileddescription>
<para>To evaluate the free energy of a hairpin-loop, several parameters have to be known. A general hairpin-loop has this structure:<linebreak/>
 <preformatted>
      a3 a4
    a2     a5
    a1     a6
      X - Y
      |   |
      5&apos;  3&apos;
</preformatted> where X-Y marks the closing pair [e.g. a <bold>(G,C)</bold> pair]. The length of this loop is 6 as there are six unpaired nucleotides (a1-a6) enclosed by (X,Y). The 5&apos; mismatching nucleotide is a1 while the 3&apos; mismatch is a6. The nucleotide sequence of this loop is "a1.a2.a3.a4.a5.a6" <linebreak/>
</para>
<para><simplesect kind="note"><para>The parameter sequence should contain the sequence of the loop in capital letters of the nucleic acid alphabet if the loop size is below 7. This is useful for unusually stable tri-, tetra- and hexa-loops which are treated differently (based on experimental data) if they are tabulated.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__energy__parameters_1ga5fe3524fd6d2a297099238f117254c13" kindref="member">scale_parameters()</ref>, <ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref></para>
</simplesect>
<simplesect kind="warning"><para>Not (really) thread safe! A threadsafe implementation will replace this function in a future release!<linebreak/>
 Energy evaluation may change due to updates in global variable &quot;tetra_loop&quot;</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the loop (number of unpaired nucleotides) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair type of the base pair closing the hairpin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>si1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 5&apos;-mismatching nucleotide </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sj1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3&apos;-mismatching nucleotide </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The sequence of the loop (May be <computeroutput>NULL</computeroutput>, otherwise mst be at least <formula id="55">$size + 2$</formula> long) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>The datastructure containing scaled energy parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Free energy of the Hairpin-loop in dcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/hairpin.h" line="345" column="1" bodyfile="ViennaRNA/eval/hairpin.h" bodystart="345" bodyend="410" declfile="ViennaRNA/eval/hairpin.h" declline="278" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga57179ea326cc5ed8dfe4d3962b233128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_E_hp_loop</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j)</argsstring>
        <name>vrna_E_hp_loop</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/hairpin.h" line="285" column="17" declfile="ViennaRNA/eval/hairpin.h" declline="285" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga7d358fa17aaf1cfc312a053accd10778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_E_ext_hp_loop</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j)</argsstring>
        <name>vrna_E_ext_hp_loop</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/hairpin.h" line="292" column="17" declfile="ViennaRNA/eval/hairpin.h" declline="292" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gad0bb844f8dc704c71737ae1d7e32b975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_eval_hp_loop</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j)</argsstring>
        <name>vrna_eval_hp_loop</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="wrappers_1_wrappers000071"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>eval_hp_loop()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline  :py:meth:`RNA.fold_compound.eval_hp_loop()` in the :doc:`/api_python` </verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/hairpin.h" line="299" column="17" declfile="ViennaRNA/eval/hairpin.h" declline="299" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gafd39e7355dcf36bf1517bafc1b49c2d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_eval_ext_hp_loop</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j)</argsstring>
        <name>vrna_eval_ext_hp_loop</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/hairpin.h" line="306" column="17" declfile="ViennaRNA/eval/hairpin.h" declline="306" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga00a1defade1e714fa4c68b86ef95b980" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>static FLT_OR_DBL exp_E_Hairpin</definition>
        <argsstring>(int u, int type, short si1, short sj1, const char *string, vrna_exp_param_t *P)</argsstring>
        <name>exp_E_Hairpin</name>
        <param>
          <type>int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>short</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>Compute Boltzmann weight <formula id="56">$e^{-\Delta G/kT} $</formula> of a hairpin loop. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>multiply by scale[u+2]</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__energy__parameters_1ga1007b70b7176f7cc78ed224460b89bbe" kindref="member">get_scaled_pf_parameters()</ref>, <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref>, E_Hairpin()</para>
</simplesect>
<simplesect kind="warning"><para>Not (really) thread safe! A threadsafe implementation will replace this function in a future release!<linebreak/>
 Energy evaluation may change due to updates in global variable &quot;tetra_loop&quot;</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the loop (number of unpaired nucleotides) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair type of the base pair closing the hairpin </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>si1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 5&apos;-mismatching nucleotide </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sj1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3&apos;-mismatching nucleotide </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The sequence of the loop (May be <computeroutput>NULL</computeroutput>, otherwise mst be at least <formula id="55">$size + 2$</formula> long) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>The datastructure containing scaled Boltzmann weights of the energy parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Boltzmann weight of the Hairpin-loop </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/hairpin.h" line="414" column="1" bodyfile="ViennaRNA/eval/hairpin.h" bodystart="414" bodyend="485" declfile="ViennaRNA/eval/hairpin.h" declline="334" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gad62fe037be0a3fc6914676e5cb85be5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>FLT_OR_DBL vrna_exp_E_hp_loop</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j)</argsstring>
        <name>vrna_exp_E_hp_loop</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/hairpin.h" line="341" column="24" declfile="ViennaRNA/eval/hairpin.h" declline="341" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga851027dfadccc9211ac2098c03ff9f60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int E_IntLoop</definition>
        <argsstring>(int n1, int n2, int type, int type_2, int si1, int sj1, int sp1, int sq1, vrna_param_t *P)</argsstring>
        <name>E_IntLoop</name>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sp1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sq1</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><heading level="2">Compute the Energy of an internal-loop</heading>
</para>
<para>This function computes the free energy <formula id="59">$\Delta G$</formula> of an internal-loop with the following structure: <linebreak/>
 <preformatted>
      3&apos;  5&apos;
      |   |
      U - V
  a_n       b_1
   .        .
   .        .
   .        .
  a_1       b_m
      X - Y
      |   |
      5&apos;  3&apos;
</preformatted> This general structure depicts an internal-loop that is closed by the base pair (X,Y). The enclosed base pair is (V,U) which leaves the unpaired bases a_1-a_n and b_1-b_n that constitute the loop. In this example, the length of the internal-loop is <formula id="58">$(n+m)$</formula> where n or m may be 0 resulting in a bulge-loop or base pair stack. The mismatching nucleotides for the closing pair (X,Y) are:<linebreak/>
 5&apos;-mismatch: a_1<linebreak/>
 3&apos;-mismatch: b_m<linebreak/>
 and for the enclosed base pair (V,U):<linebreak/>
 5&apos;-mismatch: b_1<linebreak/>
 3&apos;-mismatch: a_n<linebreak/>
</para>
<para><simplesect kind="note"><para>Base pairs are always denoted in 5&apos;-&gt;3&apos; direction. Thus the enclosed base pair must be &apos;turned arround&apos; when evaluating the free energy of the internal-loop<linebreak/>
 This function is threadsafe</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__energy__parameters_1ga5fe3524fd6d2a297099238f117254c13" kindref="member">scale_parameters()</ref>, <ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n1</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the &apos;left&apos;-loop (number of unpaired nucleotides) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n2</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the &apos;right&apos;-loop (number of unpaired nucleotides) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair type of the base pair closing the internal loop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_2</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair type of the enclosed base pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>si1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 5&apos;-mismatching nucleotide of the closing pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sj1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3&apos;-mismatching nucleotide of the closing pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sp1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3&apos;-mismatching nucleotide of the enclosed pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sq1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 5&apos;-mismatching nucleotide of the enclosed pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>The datastructure containing scaled energy parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Free energy of the Interior-loop in dcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="612" column="1" bodyfile="ViennaRNA/eval/internal.h" bodystart="612" bodyend="715" declfile="ViennaRNA/eval/internal.h" declline="244" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga73745a132b0fda5e4d8b11ed8eec43ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>static FLT_OR_DBL exp_E_IntLoop</definition>
        <argsstring>(int u1, int u2, int type, int type2, short si1, short sj1, short sp1, short sq1, vrna_exp_param_t *P)</argsstring>
        <name>exp_E_IntLoop</name>
        <param>
          <type>int</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type2</declname>
        </param>
        <param>
          <type>short</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sp1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sq1</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><heading level="2">Compute Boltzmann weight <formula id="56">$e^{-\Delta G/kT} $</formula> of internal loop</heading>
</para>
<para>multiply by scale[u1+u2+2] for scaling</para>
<para><simplesect kind="note"><para>This function is threadsafe</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__energy__parameters_1ga1007b70b7176f7cc78ed224460b89bbe" kindref="member">get_scaled_pf_parameters()</ref>, <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref>, E_IntLoop()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u1</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the &apos;left&apos;-loop (number of unpaired nucleotides) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u2</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the &apos;right&apos;-loop (number of unpaired nucleotides) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair type of the base pair closing the internal loop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type2</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair type of the enclosed base pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>si1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 5&apos;-mismatching nucleotide of the closing pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sj1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3&apos;-mismatching nucleotide of the closing pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sp1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3&apos;-mismatching nucleotide of the enclosed pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sq1</parametername>
</parameternamelist>
<parameterdescription>
<para>The 5&apos;-mismatching nucleotide of the enclosed pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>The datastructure containing scaled Boltzmann weights of the energy parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Boltzmann weight of the Interior-loop </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="719" column="1" bodyfile="ViennaRNA/eval/internal.h" bodystart="719" bodyend="812" declfile="ViennaRNA/eval/internal.h" declline="276" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga5fac9ca6a1369512f5335567651cb847" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int E_IntLoop_Co</definition>
        <argsstring>(int type, int type_2, int i, int j, int p, int q, int cutpoint, short si1, short sj1, short sp1, short sq1, int dangles, vrna_param_t *P)</argsstring>
        <name>E_IntLoop_Co</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cutpoint</declname>
        </param>
        <param>
          <type>short</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sp1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sq1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dangles</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="816" column="1" bodyfile="ViennaRNA/eval/internal.h" bodystart="816" bodyend="843" declfile="ViennaRNA/eval/internal.h" declline="293" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga3ecbadd697664a75ec7008724ef989f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __E_IntLoop_Co</definition>
        <argsstring>(int type, int type_2, int i, int j, int p, int q, int cutpoint, short si1, short sj1, short sp1, short sq1, int dangles, vrna_param_t *P)</argsstring>
        <name>__E_IntLoop_Co</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cutpoint</declname>
        </param>
        <param>
          <type>short</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sp1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sq1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dangles</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="847" column="1" bodyfile="ViennaRNA/eval/internal.h" bodystart="847" bodyend="964" declfile="ViennaRNA/eval/internal.h" declline="297" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gabfcc65bcd7f7a06f22767d2cd91eebb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ubf_eval_int_loop</definition>
        <argsstring>(int i, int j, int p, int q, int i1, int j1, int p1, int q1, short si, short sj, short sp, short sq, unsigned char type, unsigned char type_2, int *rtype, int ij, int cp, vrna_param_t *P, vrna_sc_t *sc)</argsstring>
        <name>ubf_eval_int_loop</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>si</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sj</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sq</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>type_2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rtype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ij</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cp</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="group__soft__constraints_1ga75401ce219ef8dbcceb672db82d434c6" kindref="member">vrna_sc_t</ref> *</type>
          <declname>sc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="423" column="1" bodyfile="ViennaRNA/eval/internal.h" bodystart="423" bodyend="488" declfile="ViennaRNA/eval/internal.h" declline="340" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga0897fc4eebc981ed56dcfc70e4a7bca6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ubf_eval_int_loop2</definition>
        <argsstring>(int i, int j, int p, int q, int i1, int j1, int p1, int q1, short si, short sj, short sp, short sq, unsigned char type, unsigned char type_2, int *rtype, int ij, unsigned int *sn, unsigned int *ss, vrna_param_t *P, vrna_sc_t *sc)</argsstring>
        <name>ubf_eval_int_loop2</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>si</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sj</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sq</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>type_2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rtype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ij</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>sn</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>ss</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="group__soft__constraints_1ga75401ce219ef8dbcceb672db82d434c6" kindref="member">vrna_sc_t</ref> *</type>
          <declname>sc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="492" column="1" bodyfile="ViennaRNA/eval/internal.h" bodystart="492" bodyend="558" declfile="ViennaRNA/eval/internal.h" declline="364" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga701437cdfbeba8f1a0677ee718243165" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ubf_eval_ext_int_loop</definition>
        <argsstring>(int i, int j, int p, int q, int i1, int j1, int p1, int q1, short si, short sj, short sp, short sq, unsigned char type, unsigned char type_2, int length, vrna_param_t *P, vrna_sc_t *sc)</argsstring>
        <name>ubf_eval_ext_int_loop</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>short</type>
          <declname>si</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sj</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>short</type>
          <declname>sq</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>type_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="group__soft__constraints_1ga75401ce219ef8dbcceb672db82d434c6" kindref="member">vrna_sc_t</ref> *</type>
          <declname>sc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="562" column="1" bodyfile="ViennaRNA/eval/internal.h" bodystart="562" bodyend="608" declfile="ViennaRNA/eval/internal.h" declline="395" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gaab3547bfcdc39d89babbc7ed2a1a4b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_eval_int_loop</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j, int k, int l)</argsstring>
        <name>vrna_eval_int_loop</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="wrappers_1_wrappers000072"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>eval_int_loop()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline  :py:meth:`RNA.fold_compound.eval_int_loop()` in the :doc:`/api_python` </verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="404" column="17" declfile="ViennaRNA/eval/internal.h" declline="404" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga75bade120c653de9959a1e0eab879ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_E_stack</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j)</argsstring>
        <name>vrna_E_stack</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="410" column="17" declfile="ViennaRNA/eval/internal.h" declline="410" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga51130eaa2debd3bb8e52de7a3de048ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>FLT_OR_DBL vrna_exp_E_interior_loop</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j, int k, int l)</argsstring>
        <name>vrna_exp_E_interior_loop</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="419" column="24" declfile="ViennaRNA/eval/internal.h" declline="419" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga3fe1e1a38723b0d4f2f370b77e745446" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int E_MLstem</definition>
        <argsstring>(int type, int si1, int sj1, vrna_param_t *P)</argsstring>
        <name>E_MLstem</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/multibranch.h" line="164" column="1" bodyfile="ViennaRNA/eval/multibranch.h" bodystart="164" bodyend="184" declfile="ViennaRNA/eval/multibranch.h" declline="160" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga9f9e6e045ffc1dfbe4875a31c0cc3095" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref></type>
        <definition>static FLT_OR_DBL exp_E_MLstem</definition>
        <argsstring>(int type, int si1, int sj1, vrna_exp_param_t *P)</argsstring>
        <name>exp_E_MLstem</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>si1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sj1</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/multibranch.h" line="204" column="1" bodyfile="ViennaRNA/eval/multibranch.h" bodystart="204" bodyend="223" declfile="ViennaRNA/eval/multibranch.h" declline="200" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gaf93986cb3cb29770ec9cca69c9fab8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_structure</definition>
        <argsstring>(const char *string, const char *structure, int verbosity_level)</argsstring>
        <name>energy_of_structure</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
<para>Calculate the free energy of an already folded RNA using global model detail settings. </para>
        </briefdescription>
        <detaileddescription>
<para>If verbosity level is set to a value &gt;0, energies of structure elements are printed to stdout</para>
<para><simplesect kind="note"><para>OpenMP: This function relies on several global model settings variables and thus is not to be considered threadsafe. See <ref refid="group__eval__deprecated_1gaf9d064d3c496de42eca6734a96fd2090" kindref="member">energy_of_struct_par()</ref> for a completely threadsafe implementation.</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000145"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref> or <ref refid="group__eval_1ga4078d8889e54c1f2e832f6c558399498" kindref="member">vrna_eval_structure_verbose()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity_level</parametername>
</parameternamelist>
<parameterdescription>
<para>a flag to turn verbose output on/off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the free energy of the input structure given the input sequence in kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="972" column="19" declfile="ViennaRNA/eval/structures.h" declline="972" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gaf9d064d3c496de42eca6734a96fd2090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_struct_par</definition>
        <argsstring>(const char *string, const char *structure, vrna_param_t *parameters, int verbosity_level)</argsstring>
        <name>energy_of_struct_par</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
<para>Calculate the free energy of an already folded RNA. </para>
        </briefdescription>
        <detaileddescription>
<para>If verbosity level is set to a value &gt;0, energies of structure elements are printed to stdout</para>
<para><xrefsect id="deprecated_1_deprecated000146"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref> or <ref refid="group__eval_1ga4078d8889e54c1f2e832f6c558399498" kindref="member">vrna_eval_structure_verbose()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence in uppercase letters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>Secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>A data structure containing the prescaled energy contributions and the model details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity_level</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag to turn verbose output on/off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The free energy of the input structure given the input sequence in kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="994" column="19" declfile="ViennaRNA/eval/structures.h" declline="994" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gaeb14f3664aec67fc03268ac75253f0f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_circ_structure</definition>
        <argsstring>(const char *string, const char *structure, int verbosity_level)</argsstring>
        <name>energy_of_circ_structure</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
<para>Calculate the free energy of an already folded circular RNA. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>OpenMP: This function relies on several global model settings variables and thus is not to be considered threadsafe. See <ref refid="group__eval__deprecated_1ga3f01f9744ba6a40555eb4d81fc77f6df" kindref="member">energy_of_circ_struct_par()</ref> for a completely threadsafe implementation.</para>
</simplesect>
If verbosity level is set to a value &gt;0, energies of structure elements are printed to stdout</para>
<para><xrefsect id="deprecated_1_deprecated000147"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref> or <ref refid="group__eval_1ga4078d8889e54c1f2e832f6c558399498" kindref="member">vrna_eval_structure_verbose()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>Secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity_level</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag to turn verbose output on/off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The free energy of the input structure given the input sequence in kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1018" column="19" declfile="ViennaRNA/eval/structures.h" declline="1018" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga3f01f9744ba6a40555eb4d81fc77f6df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_circ_struct_par</definition>
        <argsstring>(const char *string, const char *structure, vrna_param_t *parameters, int verbosity_level)</argsstring>
        <name>energy_of_circ_struct_par</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
<para>Calculate the free energy of an already folded circular RNA. </para>
        </briefdescription>
        <detaileddescription>
<para>If verbosity level is set to a value &gt;0, energies of structure elements are printed to stdout</para>
<para><xrefsect id="deprecated_1_deprecated000148"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref> or <ref refid="group__eval_1ga4078d8889e54c1f2e832f6c558399498" kindref="member">vrna_eval_structure_verbose()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval_1ga06985672a4c73f0e56e1c5722e0aa88e" kindref="member">vrna_eval_structure()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>Secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>A data structure containing the prescaled energy contributions and the model details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity_level</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag to turn verbose output on/off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The free energy of the input structure given the input sequence in kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1040" column="19" declfile="ViennaRNA/eval/structures.h" declline="1040" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga30687ad32835b9894875940958e3eb9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_gquad_structure</definition>
        <argsstring>(const char *string, const char *structure, int verbosity_level)</argsstring>
        <name>energy_of_gquad_structure</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1047" column="19" declfile="ViennaRNA/eval/structures.h" declline="1047" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga7d8e18eab7bdc45744b063c81a25ca78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_gquad_struct_par</definition>
        <argsstring>(const char *string, const char *structure, vrna_param_t *parameters, int verbosity_level)</argsstring>
        <name>energy_of_gquad_struct_par</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1054" column="19" declfile="ViennaRNA/eval/structures.h" declline="1054" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga8831445966b761417e713360791299d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int energy_of_structure_pt</definition>
        <argsstring>(const char *string, short *ptable, short *s, short *s1, int verbosity_level)</argsstring>
        <name>energy_of_structure_pt</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>ptable</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
<para>Calculate the free energy of an already folded RNA. </para>
        </briefdescription>
        <detaileddescription>
<para>If verbosity level is set to a value &gt;0, energies of structure elements are printed to stdout</para>
<para><simplesect kind="note"><para>OpenMP: This function relies on several global model settings variables and thus is not to be considered threadsafe. See <ref refid="group__eval__deprecated_1ga49acb3d5627dc6823a7ce12d116d4c69" kindref="member">energy_of_struct_pt_par()</ref> for a completely threadsafe implementation.</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000149"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval_1gaf7227a536cfa4bfd35bf015c865863f6" kindref="member">vrna_eval_structure_pt()</ref> or <ref refid="group__eval_1ga9e8775770750783304d24fe0c4b15293" kindref="member">vrna_eval_structure_pt_verbose()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval_1gaf7227a536cfa4bfd35bf015c865863f6" kindref="member">vrna_eval_structure_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptable</parametername>
</parameternamelist>
<parameterdescription>
<para>the pair table of the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity_level</parametername>
</parameternamelist>
<parameterdescription>
<para>a flag to turn verbose output on/off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the free energy of the input structure given the input sequence in 10kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1083" column="17" declfile="ViennaRNA/eval/structures.h" declline="1083" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga49acb3d5627dc6823a7ce12d116d4c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int energy_of_struct_pt_par</definition>
        <argsstring>(const char *string, short *ptable, short *s, short *s1, vrna_param_t *parameters, int verbosity_level)</argsstring>
        <name>energy_of_struct_pt_par</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>ptable</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity_level</declname>
        </param>
        <briefdescription>
<para>Calculate the free energy of an already folded RNA. </para>
        </briefdescription>
        <detaileddescription>
<para>If verbosity level is set to a value &gt;0, energies of structure elements are printed to stdout</para>
<para><xrefsect id="deprecated_1_deprecated000150"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval_1gaf7227a536cfa4bfd35bf015c865863f6" kindref="member">vrna_eval_structure_pt()</ref> or <ref refid="group__eval_1ga9e8775770750783304d24fe0c4b15293" kindref="member">vrna_eval_structure_pt_verbose()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval_1gaf7227a536cfa4bfd35bf015c865863f6" kindref="member">vrna_eval_structure_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence in uppercase letters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptable</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair table of the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>A data structure containing the prescaled energy contributions and the model details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity_level</parametername>
</parameternamelist>
<parameterdescription>
<para>A flag to turn verbose output on/off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The free energy of the input structure given the input sequence in 10kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1109" column="17" declfile="ViennaRNA/eval/structures.h" declline="1109" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga539ecaed89730f7644c202f304d7529b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_move</definition>
        <argsstring>(const char *string, const char *structure, int m1, int m2)</argsstring>
        <name>energy_of_move</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
<para>Calculate energy of a move (closing or opening of a base pair) </para>
        </briefdescription>
        <detaileddescription>
<para>If the parameters m1 and m2 are negative, it is deletion (opening) of a base pair, otherwise it is insertion (opening).</para>
<para><xrefsect id="deprecated_1_deprecated000151"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval__move_1ga2e542ea644f28d33b05ec81b7cd60ae5" kindref="member">vrna_eval_move()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval__move_1ga2e542ea644f28d33b05ec81b7cd60ae5" kindref="member">vrna_eval_move()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m1</parametername>
</parameternamelist>
<parameterdescription>
<para>first coordinate of base pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m2</parametername>
</parameternamelist>
<parameterdescription>
<para>second coordinate of base pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>energy change of the move in kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1133" column="19" declfile="ViennaRNA/eval/structures.h" declline="1133" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga49e0ee561be69faf0568213546f6a53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int energy_of_move_pt</definition>
        <argsstring>(short *pt, short *s, short *s1, int m1, int m2)</argsstring>
        <name>energy_of_move_pt</name>
        <param>
          <type>short *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
<para>Calculate energy of a move (closing or opening of a base pair) </para>
        </briefdescription>
        <detaileddescription>
<para>If the parameters m1 and m2 are negative, it is deletion (opening) of a base pair, otherwise it is insertion (opening).</para>
<para><xrefsect id="deprecated_1_deprecated000152"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval__move_1ga03995d1cd83b3881af7c89dd4ddbdefc" kindref="member">vrna_eval_move_pt()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval__move_1ga03995d1cd83b3881af7c89dd4ddbdefc" kindref="member">vrna_eval_move_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>the pair table of the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m1</parametername>
</parameternamelist>
<parameterdescription>
<para>first coordinate of base pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m2</parametername>
</parameternamelist>
<parameterdescription>
<para>second coordinate of base pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>energy change of the move in 10cal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1160" column="17" declfile="ViennaRNA/eval/structures.h" declline="1160" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga507d4fd93f4b398d793ba2402731388d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int loop_energy</definition>
        <argsstring>(short *ptable, short *s, short *s1, int i)</argsstring>
        <name>loop_energy</name>
        <param>
          <type>short *</type>
          <declname>ptable</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Calculate energy of a loop. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000153"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__eval__loops_1ga5f9fe7c27d0b628a3efc2d725f52853e" kindref="member">vrna_eval_loop_pt()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval__loops_1ga5f9fe7c27d0b628a3efc2d725f52853e" kindref="member">vrna_eval_loop_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptable</parametername>
</parameternamelist>
<parameterdescription>
<para>the pair table of the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>position of covering base pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>free energy of the loop in 10cal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1180" column="17" declfile="ViennaRNA/eval/structures.h" declline="1180" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1gac2b37fea2145c94d925a3f33378ef87b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_struct</definition>
        <argsstring>(const char *string, const char *structure)</argsstring>
        <name>energy_of_struct</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the free energy of an already folded RNA</para>
<para><simplesect kind="note"><para>This function is not entirely threadsafe! Depending on the state of the global variable <ref refid="group__eval__deprecated_1ga567530678f6260a1a649a5beca5da4c5" kindref="member">eos_debug</ref> it prints energy information to stdout or not...<linebreak/>
 </para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000154"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated and should not be used in future programs! Use <ref refid="group__eval__deprecated_1gaf93986cb3cb29770ec9cca69c9fab8cf" kindref="member">energy_of_structure()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval__deprecated_1gaf93986cb3cb29770ec9cca69c9fab8cf" kindref="member">energy_of_structure</ref>, <ref refid="group__eval__deprecated_1ga657222e2758c46bf13b416ef3032e417" kindref="member">energy_of_circ_struct()</ref>, <ref refid="group__eval__deprecated_1ga27ce6f68512d43bf1fe14a06c9d76d5c" kindref="member">energy_of_struct_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the free energy of the input structure given the input sequence in kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1200" column="19" declfile="ViennaRNA/eval/structures.h" declline="1200" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga27ce6f68512d43bf1fe14a06c9d76d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int energy_of_struct_pt</definition>
        <argsstring>(const char *string, short *ptable, short *s, short *s1)</argsstring>
        <name>energy_of_struct_pt</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>ptable</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the free energy of an already folded RNA</para>
<para><simplesect kind="note"><para>This function is not entirely threadsafe! Depending on the state of the global variable <ref refid="group__eval__deprecated_1ga567530678f6260a1a649a5beca5da4c5" kindref="member">eos_debug</ref> it prints energy information to stdout or not...<linebreak/>
 </para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000155"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated and should not be used in future programs! Use <ref refid="group__eval__deprecated_1ga8831445966b761417e713360791299d8" kindref="member">energy_of_structure_pt()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__struct__utils__deprecated_1gab037d0de2e4c3d6a3f1d51b5b22315dc" kindref="member">make_pair_table()</ref>, <ref refid="group__eval__deprecated_1gaf93986cb3cb29770ec9cca69c9fab8cf" kindref="member">energy_of_structure()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptable</parametername>
</parameternamelist>
<parameterdescription>
<para>the pair table of the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded RNA sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the free energy of the input structure given the input sequence in 10kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1224" column="17" declfile="ViennaRNA/eval/structures.h" declline="1224" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__eval__deprecated_1ga657222e2758c46bf13b416ef3032e417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float energy_of_circ_struct</definition>
        <argsstring>(const char *string, const char *structure)</argsstring>
        <name>energy_of_circ_struct</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the free energy of an already folded circular RNA</para>
<para><simplesect kind="note"><para>This function is not entirely threadsafe! Depending on the state of the global variable <ref refid="group__eval__deprecated_1ga567530678f6260a1a649a5beca5da4c5" kindref="member">eos_debug</ref> it prints energy information to stdout or not...<linebreak/>
 </para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000156"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated and should not be used in future programs Use <ref refid="group__eval__deprecated_1gaeb14f3664aec67fc03268ac75253f0f8" kindref="member">energy_of_circ_structure()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__eval__deprecated_1gaeb14f3664aec67fc03268ac75253f0f8" kindref="member">energy_of_circ_structure()</ref>, <ref refid="group__eval__deprecated_1gac2b37fea2145c94d925a3f33378ef87b" kindref="member">energy_of_struct()</ref>, <ref refid="group__eval__deprecated_1ga27ce6f68512d43bf1fe14a06c9d76d5c" kindref="member">energy_of_struct_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the free energy of the input structure given the input sequence in kcal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/structures.h" line="1244" column="19" declfile="ViennaRNA/eval/structures.h" declline="1244" declcolumn="19"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__eval__deprecated_1ga6b109d72bf39073254090cf105a17641" prot="public" static="no">
        <name>ON_SAME_STRAND</name>
        <param><defname>I</defname></param>
        <param><defname>J</defname></param>
        <param><defname>C</defname></param>
        <initializer>(((I) &gt;= (C)) || ((J) &lt; (C)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/eval/internal.h" line="187" column="9" bodyfile="ViennaRNA/eval/internal.h" bodystart="187" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
