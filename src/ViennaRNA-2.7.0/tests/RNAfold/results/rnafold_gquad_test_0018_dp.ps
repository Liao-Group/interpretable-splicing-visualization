%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Sun Sep  1 17:19:35 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup 3 -1 roll dup 4 1 roll lt
  {
    0 len len len len 0 8 -2 roll exch 1 sub dup dup len exch sub 3 -1 roll 4 -1 roll dup len exch sub dup 3 1 roll
    moveto lineto lineto lineto lineto lineto
  }
  {
    exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
    moveto lineto lineto
  } ifelse
  closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_gquad_test_0018)
} def

/sequence { (\
CCCGCCCCACCACUCCAGCAGACCUUGCCCCUUGUGAGCUGGAUAGACUUGGGAUGGGGAGGGAGGGAGUUUUGUCUGUCUCCCUCCCCUCUCAGAACAUACUGAUUGGGAGGUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data
51 67 0.998999870 utri

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
51 56 0.706399583 ubox
51 57 0.706399583 ubox
51 58 0.000000000 ubox
51 65 0.998999870 ubox
51 66 0.000000000 ubox
52 57 0.706399583 ubox
52 58 0.706399583 ubox
52 59 0.000000000 ubox
52 66 0.998999870 ubox
52 67 0.000000000 ubox
53 58 0.706399583 ubox
53 59 0.706399583 ubox
53 67 0.998999870 ubox
56 61 0.706399583 ubox
56 62 0.000000000 ubox
57 61 0.706399583 ubox
57 62 0.706399583 ubox
57 63 0.000000000 ubox
58 61 0.000000000 ubox
58 62 0.706399583 ubox
58 63 0.706399583 ubox
59 62 0.000000000 ubox
59 63 0.706399583 ubox
61 65 0.998999870 ubox
61 66 0.000000000 ubox
62 66 0.998999870 ubox
62 67 0.000000000 ubox
63 67 0.998999870 ubox
1 41 0.006037033 ubox
1 42 0.026510815 ubox
1 113 0.004515900 ubox
1 115 0.009603882 ubox
1 117 0.040423926 ubox
2 21 0.008683989 ubox
2 41 0.039955946 ubox
2 42 0.027049165 ubox
2 112 0.004384167 ubox
2 113 0.012705177 ubox
2 115 0.012087294 ubox
2 117 0.062935374 ubox
3 21 0.004566700 ubox
3 36 0.006160860 ubox
3 41 0.034936306 ubox
3 112 0.012638094 ubox
3 113 0.003925388 ubox
3 115 0.117729353 ubox
3 117 0.842214742 ubox
4 8 0.014005354 ubox
4 10 0.018449068 ubox
4 11 0.020046886 ubox
4 13 0.021704215 ubox
4 19 0.016742199 ubox
4 35 0.006189210 ubox
4 39 0.118816004 ubox
4 40 0.025968439 ubox
4 79 0.005007906 ubox
4 80 0.004811946 ubox
4 82 0.004869006 ubox
4 114 0.118222262 ubox
4 116 0.901006856 ubox
5 18 0.016732028 ubox
5 34 0.006134086 ubox
5 38 0.116553639 ubox
5 41 0.005618171 ubox
5 42 0.008730146 ubox
5 78 0.005318375 ubox
5 110 0.006171634 ubox
5 113 0.116636830 ubox
5 115 0.894859320 ubox
5 117 0.020149463 ubox
6 18 0.003628538 ubox
6 36 0.014245815 ubox
6 38 0.056476211 ubox
6 41 0.023874848 ubox
6 42 0.041273573 ubox
6 53 0.003519633 ubox
6 109 0.006094643 ubox
6 110 0.010033363 ubox
6 112 0.111651103 ubox
6 113 0.243143586 ubox
6 115 0.041995211 ubox
6 117 0.078183736 ubox
7 18 0.003879998 ubox
7 21 0.003929849 ubox
7 36 0.032428998 ubox
7 38 0.047756751 ubox
7 41 0.053614339 ubox
7 42 0.178160502 ubox
7 52 0.003552495 ubox
7 108 0.005982619 ubox
7 109 0.010458956 ubox
7 110 0.012638926 ubox
7 112 0.233443747 ubox
7 113 0.302979303 ubox
7 115 0.015538386 ubox
7 117 0.078015901 ubox
8 18 0.006614748 ubox
8 21 0.007364481 ubox
8 34 0.018351111 ubox
8 36 0.169079545 ubox
8 38 0.028666395 ubox
8 41 0.237540038 ubox
8 42 0.004585457 ubox
8 51 0.003559372 ubox
8 78 0.004699024 ubox
8 108 0.010535518 ubox
8 109 0.011469444 ubox
8 110 0.028256439 ubox
8 112 0.297606420 ubox
8 113 0.021035523 ubox
8 115 0.205348881 ubox
8 117 0.016277508 ubox
9 14 0.015825763 ubox
9 33 0.017706271 ubox
9 35 0.173916998 ubox
9 40 0.237814532 ubox
9 44 0.006960629 ubox
9 50 0.003479159 ubox
9 79 0.006198629 ubox
9 107 0.009417887 ubox
9 114 0.240062451 ubox
10 18 0.009192989 ubox
10 21 0.004260474 ubox
10 34 0.167339416 ubox
10 36 0.019926608 ubox
10 38 0.258850306 ubox
10 41 0.063426185 ubox
10 42 0.190335539 ubox
10 78 0.006475256 ubox
10 109 0.086525046 ubox
10 110 0.016256851 ubox
10 112 0.004715445 ubox
10 113 0.237355647 ubox
10 115 0.015099227 ubox
10 117 0.025649881 ubox
11 18 0.016760224 ubox
11 21 0.006970196 ubox
11 27 0.006397329 ubox
11 34 0.076852427 ubox
11 36 0.475880573 ubox
11 38 0.010747989 ubox
11 41 0.297165127 ubox
11 46 0.007609280 ubox
11 78 0.004528134 ubox
11 108 0.086498927 ubox
11 109 0.014640397 ubox
11 110 0.003886387 ubox
11 112 0.231423639 ubox
11 113 0.005559494 ubox
11 115 0.048375237 ubox
11 117 0.014407398 ubox
12 26 0.006253353 ubox
12 32 0.046237215 ubox
12 33 0.087081333 ubox
12 35 0.491055337 ubox
12 40 0.298929048 ubox
12 44 0.022908959 ubox
12 79 0.008440776 ubox
12 106 0.003425352 ubox
12 107 0.076490762 ubox
12 114 0.047790954 ubox
13 18 0.013347272 ubox
13 21 0.017590478 ubox
13 27 0.004328200 ubox
13 34 0.492066823 ubox
13 36 0.008230131 ubox
13 38 0.443882889 ubox
13 41 0.005550174 ubox
13 46 0.006973621 ubox
13 78 0.008937151 ubox
13 104 0.006059034 ubox
13 108 0.005060263 ubox
13 110 0.015152202 ubox
13 112 0.008907529 ubox
13 113 0.039134342 ubox
13 115 0.016645271 ubox
13 117 0.011206106 ubox
14 20 0.016978244 ubox
14 22 0.021589536 ubox
14 34 0.005591507 ubox
14 36 0.003771989 ubox
14 37 0.445471200 ubox
14 38 0.004531799 ubox
14 43 0.366933674 ubox
14 45 0.004286618 ubox
14 105 0.016082147 ubox
14 109 0.005570328 ubox
14 110 0.012451082 ubox
14 111 0.014878077 ubox
14 112 0.020550181 ubox
15 21 0.023222679 ubox
15 27 0.006486691 ubox
15 34 0.012224567 ubox
15 36 0.444606807 ubox
15 38 0.010709889 ubox
15 41 0.016485358 ubox
15 42 0.549775904 ubox
15 104 0.013343183 ubox
15 108 0.005287064 ubox
15 109 0.019001586 ubox
15 110 0.013803477 ubox
15 112 0.004338506 ubox
15 113 0.007402960 ubox
15 115 0.004636088 ubox
15 117 0.004446874 ubox
16 21 0.014505023 ubox
16 27 0.036483656 ubox
16 34 0.435823481 ubox
16 36 0.034861453 ubox
16 38 0.004159476 ubox
16 41 0.653902829 ubox
16 104 0.010928127 ubox
16 108 0.019127029 ubox
16 109 0.012235266 ubox
16 112 0.007398039 ubox
16 115 0.005885158 ubox
16 117 0.007589968 ubox
17 25 0.012946632 ubox
17 26 0.036105395 ubox
17 32 0.055961660 ubox
17 33 0.429409700 ubox
17 35 0.043761581 ubox
17 40 0.657235269 ubox
17 103 0.013277530 ubox
17 107 0.018291356 ubox
17 114 0.005287881 ubox
18 23 0.007615046 ubox
18 24 0.014439754 ubox
18 25 0.028985512 ubox
18 28 0.718262092 ubox
18 29 0.050048365 ubox
18 30 0.010104329 ubox
18 31 0.056374847 ubox
18 32 0.094506367 ubox
18 33 0.010504755 ubox
18 35 0.093347505 ubox
18 39 0.657707095 ubox
18 79 0.003877149 ubox
18 102 0.012895489 ubox
18 106 0.011517828 ubox
18 116 0.056154904 ubox
19 27 0.722476091 ubox
19 34 0.098947693 ubox
19 36 0.008268952 ubox
19 38 0.654541516 ubox
19 41 0.091521179 ubox
19 78 0.004469782 ubox
19 104 0.011799306 ubox
19 115 0.056159919 ubox
20 25 0.025963557 ubox
20 26 0.702303024 ubox
20 32 0.068252627 ubox
20 33 0.093457615 ubox
20 35 0.016184525 ubox
20 40 0.093785145 ubox
20 77 0.004469034 ubox
20 100 0.006771634 ubox
20 103 0.011835559 ubox
20 114 0.049257406 ubox
21 25 0.476508951 ubox
21 26 0.018030100 ubox
21 28 0.055930966 ubox
21 29 0.054643509 ubox
21 30 0.048047349 ubox
21 31 0.076130614 ubox
21 32 0.076723892 ubox
21 33 0.008675211 ubox
21 35 0.020822239 ubox
21 39 0.093293659 ubox
21 40 0.003162767 ubox
21 76 0.004469307 ubox
21 102 0.011802917 ubox
21 116 0.003558996 ubox
22 26 0.008594891 ubox
22 32 0.009428608 ubox
22 33 0.014688719 ubox
22 35 0.617401038 ubox
22 40 0.024427062 ubox
22 75 0.004458618 ubox
22 100 0.004176620 ubox
22 114 0.012239911 ubox
23 27 0.027393080 ubox
23 34 0.608232160 ubox
23 36 0.060201102 ubox
23 38 0.029579246 ubox
23 41 0.005669240 ubox
23 74 0.004421107 ubox
23 113 0.015468491 ubox
24 34 0.123193657 ubox
24 36 0.025967775 ubox
24 38 0.127977188 ubox
24 41 0.004607170 ubox
24 42 0.003583022 ubox
24 95 0.003759271 ubox
24 112 0.015449081 ubox
25 34 0.026222620 ubox
25 36 0.003282750 ubox
25 37 0.177222332 ubox
25 41 0.003985014 ubox
25 95 0.008700992 ubox
25 96 0.003875010 ubox
25 97 0.004824137 ubox
25 111 0.014599052 ubox
26 34 0.010270818 ubox
26 36 0.177100760 ubox
26 37 0.007974457 ubox
26 94 0.010022405 ubox
26 95 0.003974592 ubox
26 96 0.004980809 ubox
26 99 0.003929876 ubox
26 110 0.003789716 ubox
26 117 0.013052670 ubox
27 31 0.133843870 ubox
27 32 0.067494273 ubox
27 33 0.035849964 ubox
27 35 0.179417584 ubox
27 39 0.025414191 ubox
27 93 0.010278799 ubox
27 98 0.003969508 ubox
27 116 0.022324560 ubox
28 34 0.179455265 ubox
28 36 0.004759714 ubox
28 38 0.025348782 ubox
28 95 0.003757539 ubox
28 115 0.022294241 ubox
29 34 0.027196270 ubox
29 36 0.019185389 ubox
29 38 0.010281471 ubox
29 110 0.006417285 ubox
29 113 0.007661241 ubox
30 34 0.016829073 ubox
30 36 0.016078554 ubox
30 38 0.007955175 ubox
30 42 0.004953422 ubox
30 109 0.006437877 ubox
30 112 0.007569827 ubox
30 113 0.021823434 ubox
31 36 0.029092552 ubox
31 38 0.013961163 ubox
31 41 0.006459614 ubox
31 108 0.006418886 ubox
31 112 0.021885282 ubox
32 37 0.013246288 ubox
32 97 0.003506190 ubox
32 111 0.020742564 ubox
33 94 0.003480994 ubox
33 96 0.003888108 ubox
33 110 0.005236247 ubox
34 39 0.007456882 ubox
34 83 0.008007550 ubox
34 84 0.009648552 ubox
34 86 0.004652951 ubox
34 87 0.036585089 ubox
34 88 0.029777369 ubox
34 89 0.010600200 ubox
34 91 0.003220166 ubox
34 93 0.003697175 ubox
34 116 0.004578724 ubox
35 94 0.004085645 ubox
35 115 0.004467745 ubox
36 82 0.037210322 ubox
36 83 0.003223611 ubox
36 84 0.006131187 ubox
36 86 0.297499489 ubox
36 87 0.003736922 ubox
36 91 0.004675642 ubox
36 93 0.004120024 ubox
37 81 0.041259560 ubox
37 85 0.323542994 ubox
37 90 0.004673538 ubox
37 92 0.004111048 ubox
38 79 0.010308438 ubox
38 80 0.041257088 ubox
38 81 0.003648041 ubox
38 82 0.056114985 ubox
38 83 0.024962906 ubox
38 84 0.326977916 ubox
38 85 0.004763034 ubox
38 86 0.010276671 ubox
38 89 0.004607523 ubox
38 91 0.004076907 ubox
38 116 0.071328760 ubox
39 78 0.016254595 ubox
39 115 0.071346642 ubox
40 78 0.033458520 ubox
41 77 0.045566704 ubox
41 80 0.011452588 ubox
41 81 0.589571100 ubox
41 82 0.116511621 ubox
41 83 0.020751073 ubox
41 84 0.010186609 ubox
41 116 0.004670309 ubox
42 76 0.047690847 ubox
42 80 0.788432673 ubox
42 81 0.012201136 ubox
42 82 0.021855658 ubox
42 83 0.008432887 ubox
43 75 0.048874492 ubox
43 79 0.913677461 ubox
43 81 0.019810769 ubox
44 74 0.049043756 ubox
44 78 0.971698059 ubox
44 101 0.006500516 ubox
44 104 0.003464186 ubox
45 72 0.040420519 ubox
45 73 0.043070332 ubox
45 77 0.988924895 ubox
45 81 0.097793864 ubox
45 100 0.006971463 ubox
45 103 0.004189100 ubox
46 71 0.052529263 ubox
46 72 0.036236787 ubox
46 76 0.991210126 ubox
46 80 0.105720683 ubox
46 98 0.011671378 ubox
46 102 0.004234428 ubox
47 70 0.058694219 ubox
47 71 0.027869638 ubox
47 75 0.991036837 ubox
47 79 0.105757618 ubox
48 69 0.063567361 ubox
48 74 0.990534299 ubox
48 78 0.105710296 ubox
48 95 0.012141250 ubox
49 69 0.029103097 ubox
49 74 0.011064891 ubox
49 94 0.008622557 ubox
49 95 0.034966804 ubox
50 74 0.004471144 ubox
50 94 0.041818758 ubox
51 93 0.043745441 ubox
52 92 0.044039037 ubox
53 91 0.044378687 ubox
54 90 0.043771281 ubox
56 89 0.044622110 ubox
57 88 0.044638817 ubox
58 87 0.044664709 ubox
59 86 0.044708520 ubox
60 85 0.044703044 ubox
61 84 0.044709426 ubox
62 83 0.044709708 ubox
63 82 0.044709549 ubox
64 81 0.044702763 ubox
65 80 0.044704580 ubox
66 79 0.044248973 ubox
68 77 0.044724812 ubox
69 76 0.044684344 ubox
74 80 0.007028491 ubox
74 82 0.003962171 ubox
77 117 0.014927965 ubox
78 82 0.008810514 ubox
78 83 0.007108227 ubox
78 84 0.008364299 ubox
78 86 0.006700699 ubox
78 114 0.003690270 ubox
78 116 0.062405408 ubox
79 113 0.006100196 ubox
79 115 0.058987459 ubox
79 117 0.006248432 ubox
80 112 0.015419900 ubox
80 115 0.042852969 ubox
80 117 0.060057939 ubox
81 111 0.025161166 ubox
81 115 0.050284498 ubox
81 117 0.010586773 ubox
82 110 0.025987907 ubox
82 113 0.047583109 ubox
82 115 0.148380871 ubox
82 117 0.010913151 ubox
83 109 0.025856646 ubox
83 112 0.036217227 ubox
83 113 0.874085050 ubox
83 115 0.004955791 ubox
84 108 0.025699467 ubox
84 112 0.886205045 ubox
84 113 0.019705241 ubox
85 111 0.899516908 ubox
85 112 0.019030015 ubox
85 113 0.011634840 ubox
86 109 0.004425757 ubox
86 110 0.870592153 ubox
86 112 0.020098766 ubox
86 113 0.004118624 ubox
87 108 0.004844513 ubox
87 109 0.838831553 ubox
87 110 0.480038272 ubox
87 112 0.004155301 ubox
87 115 0.003464977 ubox
88 108 0.804222899 ubox
88 109 0.534925759 ubox
88 110 0.020689241 ubox
88 113 0.019151341 ubox
89 95 0.004053171 ubox
89 104 0.003242857 ubox
89 108 0.583597010 ubox
89 109 0.020796027 ubox
89 110 0.007283233 ubox
89 112 0.019456064 ubox
90 94 0.003666377 ubox
90 105 0.031250365 ubox
90 108 0.020109375 ubox
90 109 0.007341041 ubox
90 111 0.019805594 ubox
91 95 0.003214736 ubox
91 104 0.030184182 ubox
91 108 0.009364312 ubox
91 110 0.019840624 ubox
92 104 0.003639493 ubox
92 105 0.978898512 ubox
92 109 0.019573072 ubox
93 104 0.997923901 ubox
93 108 0.019423405 ubox
94 100 0.003288010 ubox
94 103 0.997747447 ubox
94 107 0.018845983 ubox
95 100 0.003287864 ubox
95 102 0.992772538 ubox
95 106 0.015153122 ubox
95 107 0.003541415 ubox
96 100 0.086986771 ubox
96 103 0.004133251 ubox
96 106 0.005049340 ubox
96 107 0.003236750 ubox
97 103 0.003939099 ubox
97 106 0.003905593 ubox
98 104 0.017534411 ubox
98 108 0.004776506 ubox
99 103 0.014269197 ubox
99 106 0.004013025 ubox
99 107 0.004832878 ubox
100 105 0.004174727 ubox
3 117 0.9500000 lbox
4 116 0.9500000 lbox
5 115 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
43 79 0.9500000 lbox
44 78 0.9500000 lbox
45 77 0.9500000 lbox
46 76 0.9500000 lbox
47 75 0.9500000 lbox
48 74 0.9500000 lbox
83 113 0.9500000 lbox
84 112 0.9500000 lbox
85 111 0.9500000 lbox
86 110 0.9500000 lbox
87 109 0.9500000 lbox
88 108 0.9500000 lbox
92 105 0.9500000 lbox
93 104 0.9500000 lbox
94 103 0.9500000 lbox
95 102 0.9500000 lbox
51 65 0.9500000 lbox
51 56 0.9500000 lbox
56 61 0.9500000 lbox
61 65 0.9500000 lbox
52 66 0.9500000 lbox
52 57 0.9500000 lbox
57 62 0.9500000 lbox
62 66 0.9500000 lbox
53 67 0.9500000 lbox
53 58 0.9500000 lbox
58 63 0.9500000 lbox
63 67 0.9500000 lbox
showpage
end
%%EOF
