%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Sun Sep  1 17:19:34 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup 3 -1 roll dup 4 1 roll lt
  {
    0 len len len len 0 8 -2 roll exch 1 sub dup dup len exch sub 3 -1 roll 4 -1 roll dup len exch sub dup 3 1 roll
    moveto lineto lineto lineto lineto lineto
  }
  {
    exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
    moveto lineto lineto
  } ifelse
  closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_gquad_test_0013)
} def

/sequence { (\
UGGUGUUGGGGUUUGGGUAGGGGAGGGGAGCUCGGCUGUCAGAACUCCAUGGAUAUGUUUCUUUGGAUGGAGGGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data
8 27 0.056634029 utri
8 28 0.019906021 utri
9 27 0.994332495 utri
9 28 0.087745297 utri
65 78 0.007440965 utri

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
8 27 0.000000000 ubox
8 16 0.000000000 ubox
8 26 0.019906021 ubox
8 25 0.056634029 ubox
8 15 0.060030516 ubox
9 15 0.998196555 ubox
9 16 0.060030516 ubox
9 17 0.000000000 ubox
9 25 0.994332495 ubox
9 26 0.104434911 ubox
9 27 0.019906021 ubox
9 28 0.000000000 ubox
10 16 0.998196555 ubox
10 17 0.060030516 ubox
10 26 0.994332495 ubox
10 27 0.104434911 ubox
10 28 0.019906021 ubox
11 17 0.998196555 ubox
11 27 0.994332495 ubox
11 28 0.087745297 ubox
15 20 0.707106781 ubox
15 21 0.707106781 ubox
15 22 0.000000001 ubox
16 20 0.000000001 ubox
16 21 0.707106781 ubox
16 22 0.707106781 ubox
16 23 0.000000001 ubox
17 21 0.000000001 ubox
17 22 0.707106781 ubox
17 23 0.707106781 ubox
20 25 0.704238772 ubox
20 26 0.063621879 ubox
20 27 0.000000000 ubox
21 25 0.704238772 ubox
21 26 0.707106781 ubox
21 27 0.063621879 ubox
21 28 0.000000000 ubox
22 26 0.704238772 ubox
22 27 0.707106781 ubox
22 28 0.063621879 ubox
23 27 0.704238772 ubox
23 28 0.063621879 ubox
65 69 0.007440965 ubox
65 77 0.007440965 ubox
66 70 0.007440965 ubox
66 78 0.007440965 ubox
69 72 0.004296043 ubox
69 73 0.004296043 ubox
69 74 0.004296043 ubox
70 73 0.004296043 ubox
70 74 0.004296043 ubox
70 75 0.004296043 ubox
72 77 0.004296043 ubox
73 77 0.004296043 ubox
73 78 0.004296043 ubox
74 77 0.004296043 ubox
74 78 0.004296043 ubox
75 78 0.004296043 ubox
1 28 0.012208076 ubox
1 29 0.010515773 ubox
1 30 0.007949266 ubox
1 34 0.427293768 ubox
1 35 0.399328600 ubox
1 38 0.105581285 ubox
1 41 0.134372657 ubox
1 42 0.007176181 ubox
1 43 0.004265603 ubox
1 49 0.010873039 ubox
1 76 0.004452488 ubox
2 31 0.048261437 ubox
2 32 0.180724500 ubox
2 33 0.559913889 ubox
2 36 0.083055169 ubox
2 37 0.189517600 ubox
2 39 0.010457117 ubox
2 40 0.149056049 ubox
2 46 0.004750355 ubox
2 48 0.012518719 ubox
3 31 0.220215664 ubox
3 32 0.522372458 ubox
3 33 0.612203124 ubox
3 36 0.199111770 ubox
3 37 0.014562620 ubox
3 39 0.143304743 ubox
3 40 0.016294969 ubox
3 45 0.007165702 ubox
3 47 0.012499834 ubox
4 28 0.028812808 ubox
4 29 0.044832771 ubox
4 30 0.218415609 ubox
4 34 0.088599672 ubox
4 35 0.196999077 ubox
4 38 0.043817948 ubox
4 41 0.006035236 ubox
4 44 0.007241819 ubox
5 31 0.923479462 ubox
5 32 0.004621432 ubox
5 33 0.093129039 ubox
5 36 0.202459097 ubox
5 37 0.003322512 ubox
5 40 0.006422910 ubox
5 45 0.012635758 ubox
6 29 0.032151744 ubox
6 30 0.923964250 ubox
6 34 0.007522993 ubox
6 35 0.203624194 ubox
6 42 0.007641465 ubox
6 44 0.012566118 ubox
7 29 0.903920567 ubox
7 30 0.039604655 ubox
7 34 0.203381294 ubox
7 35 0.004298131 ubox
7 41 0.009694903 ubox
7 43 0.012048829 ubox
8 31 0.189697344 ubox
8 32 0.006822078 ubox
8 33 0.202394907 ubox
8 36 0.008060595 ubox
8 40 0.009951867 ubox
29 37 0.013324122 ubox
30 36 0.014066721 ubox
30 39 0.004206258 ubox
31 35 0.014005468 ubox
31 38 0.004964217 ubox
31 72 0.005066663 ubox
31 74 0.003499043 ubox
31 75 0.009456160 ubox
31 77 0.088064763 ubox
31 78 0.006892873 ubox
32 43 0.051780599 ubox
32 71 0.006557225 ubox
32 73 0.004485541 ubox
32 74 0.012587648 ubox
32 75 0.013084773 ubox
32 76 0.113907791 ubox
32 77 0.010307237 ubox
32 78 0.143122470 ubox
33 38 0.006345230 ubox
33 42 0.054995997 ubox
33 70 0.006714002 ubox
33 72 0.004880982 ubox
33 73 0.013926457 ubox
33 74 0.015699477 ubox
33 75 0.116320690 ubox
33 77 0.261948670 ubox
33 78 0.026015769 ubox
34 39 0.004595627 ubox
34 40 0.022787948 ubox
34 45 0.005793308 ubox
34 48 0.004532642 ubox
34 59 0.003626526 ubox
35 39 0.014921693 ubox
35 40 0.011153835 ubox
35 47 0.004534850 ubox
35 58 0.006244057 ubox
35 68 0.005837662 ubox
36 42 0.026487645 ubox
36 57 0.006721363 ubox
36 70 0.016217850 ubox
36 72 0.060591303 ubox
36 73 0.108483629 ubox
36 74 0.481380512 ubox
36 75 0.053719908 ubox
36 77 0.749463883 ubox
36 78 0.085206179 ubox
37 41 0.024006941 ubox
37 42 0.007177261 ubox
37 43 0.010535935 ubox
37 44 0.010493413 ubox
37 55 0.008928113 ubox
37 69 0.015999890 ubox
37 71 0.060327671 ubox
37 72 0.107136090 ubox
37 73 0.481743262 ubox
37 74 0.049791849 ubox
37 75 0.030485676 ubox
37 76 0.751925738 ubox
37 77 0.082233095 ubox
37 78 0.155172795 ubox
38 45 0.015425289 ubox
38 54 0.009671775 ubox
38 68 0.015271939 ubox
39 44 0.014676302 ubox
39 52 0.005151203 ubox
39 53 0.009716074 ubox
39 67 0.012539398 ubox
39 69 0.010648342 ubox
39 70 0.109094123 ubox
39 71 0.482640885 ubox
39 72 0.028264171 ubox
39 73 0.040159976 ubox
39 74 0.742460261 ubox
39 75 0.077093044 ubox
39 76 0.250101546 ubox
39 77 0.009953948 ubox
39 78 0.058365227 ubox
40 51 0.007461888 ubox
40 52 0.008899940 ubox
40 66 0.010793515 ubox
40 69 0.146296177 ubox
40 70 0.479664339 ubox
40 72 0.044528190 ubox
40 73 0.747539498 ubox
40 74 0.092712528 ubox
40 75 0.261367833 ubox
40 77 0.093719577 ubox
40 78 0.025830201 ubox
41 50 0.008376850 ubox
41 62 0.008521892 ubox
41 64 0.003650460 ubox
41 68 0.155252221 ubox
42 48 0.003480274 ubox
42 61 0.008749074 ubox
42 63 0.003543817 ubox
42 64 0.003442840 ubox
42 68 0.117034904 ubox
43 59 0.004275936 ubox
43 60 0.008257491 ubox
43 62 0.003286355 ubox
43 63 0.003902871 ubox
43 68 0.099015128 ubox
44 58 0.005309635 ubox
44 59 0.007525377 ubox
44 62 0.003375402 ubox
44 68 0.146636864 ubox
45 57 0.006046872 ubox
45 65 0.003264083 ubox
45 66 0.004567579 ubox
45 69 0.480391690 ubox
45 70 0.052328933 ubox
45 72 0.465554327 ubox
45 73 0.016866322 ubox
45 74 0.007269831 ubox
45 75 0.007573262 ubox
45 77 0.049594144 ubox
46 65 0.003617632 ubox
46 67 0.865977500 ubox
46 69 0.031578633 ubox
46 71 0.466352882 ubox
46 72 0.008073717 ubox
46 73 0.004630565 ubox
46 74 0.007047457 ubox
46 76 0.049629037 ubox
47 66 0.882717364 ubox
47 70 0.466453378 ubox
47 73 0.006720570 ubox
47 75 0.049562651 ubox
48 57 0.008939514 ubox
48 65 0.882785088 ubox
48 69 0.466390473 ubox
48 72 0.006660681 ubox
48 74 0.049424405 ubox
49 56 0.009101733 ubox
49 58 0.003684215 ubox
49 63 0.018870493 ubox
49 64 0.878805502 ubox
49 68 0.464958433 ubox
50 55 0.008484106 ubox
50 57 0.004100885 ubox
50 65 0.022010907 ubox
50 66 0.068145694 ubox
50 67 0.453039835 ubox
50 70 0.003891774 ubox
50 71 0.003383701 ubox
50 72 0.014642965 ubox
50 73 0.013421893 ubox
51 56 0.004433897 ubox
51 58 0.004243088 ubox
51 59 0.003315997 ubox
51 60 0.012166105 ubox
51 61 0.134419252 ubox
51 62 0.921514602 ubox
51 63 0.029232378 ubox
51 64 0.048759775 ubox
52 59 0.012941830 ubox
52 60 0.134319160 ubox
52 61 0.967188161 ubox
52 62 0.007474538 ubox
52 63 0.056493593 ubox
52 64 0.091506651 ubox
53 58 0.012186039 ubox
53 59 0.137259361 ubox
53 60 0.953303649 ubox
53 62 0.056918505 ubox
53 63 0.091209746 ubox
53 64 0.031355614 ubox
53 68 0.004122515 ubox
54 65 0.049214395 ubox
54 66 0.004238249 ubox
54 67 0.004222051 ubox
54 69 0.038073980 ubox
54 71 0.003876079 ubox
55 59 0.024193716 ubox
55 60 0.031011446 ubox
55 62 0.041046879 ubox
55 63 0.036897754 ubox
55 64 0.053499464 ubox
55 68 0.038593814 ubox
56 65 0.005216886 ubox
56 66 0.003347393 ubox
56 67 0.038574496 ubox
56 69 0.007375979 ubox
56 71 0.003491259 ubox
56 78 0.009243998 ubox
57 61 0.030004835 ubox
57 62 0.012725041 ubox
57 63 0.011893383 ubox
57 64 0.008010568 ubox
57 68 0.009108968 ubox
58 65 0.036042400 ubox
58 66 0.005724488 ubox
58 67 0.009780360 ubox
58 69 0.003465687 ubox
58 72 0.003175714 ubox
58 73 0.019555398 ubox
58 76 0.012349136 ubox
58 77 0.008293720 ubox
59 65 0.005972025 ubox
59 66 0.009936983 ubox
59 67 0.006690554 ubox
59 71 0.004357008 ubox
59 72 0.020701973 ubox
59 74 0.003976547 ubox
59 75 0.012900542 ubox
59 76 0.010704872 ubox
59 77 0.003601312 ubox
60 65 0.007322509 ubox
60 66 0.008541638 ubox
60 67 0.016575152 ubox
60 70 0.004438431 ubox
60 71 0.021860284 ubox
60 73 0.010202493 ubox
60 74 0.013244472 ubox
60 75 0.011030034 ubox
60 76 0.004151603 ubox
61 65 0.008395981 ubox
61 66 0.018733485 ubox
61 69 0.004495295 ubox
61 70 0.021944009 ubox
61 72 0.010758303 ubox
61 73 0.014900192 ubox
61 74 0.011218445 ubox
61 75 0.004181457 ubox
62 69 0.021577522 ubox
62 71 0.010793016 ubox
62 72 0.014941264 ubox
62 73 0.011278053 ubox
62 74 0.004129004 ubox
63 70 0.010602861 ubox
63 71 0.015005016 ubox
63 72 0.011322692 ubox
63 73 0.004046249 ubox
64 69 0.008620553 ubox
64 70 0.014908809 ubox
64 71 0.011209316 ubox
64 72 0.003900971 ubox
3 33 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
36 77 0.9500000 lbox
37 76 0.9500000 lbox
39 74 0.9500000 lbox
40 73 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
9 25 0.9500000 lbox
9 15 0.9500000 lbox
15 20 0.9500000 lbox
20 25 0.9500000 lbox
10 26 0.9500000 lbox
10 16 0.9500000 lbox
16 21 0.9500000 lbox
21 26 0.9500000 lbox
11 27 0.9500000 lbox
11 17 0.9500000 lbox
17 22 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
