%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Sun Sep  1 17:19:34 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup 3 -1 roll dup 4 1 roll lt
  {
    0 len len len len 0 8 -2 roll exch 1 sub dup dup len exch sub 3 -1 roll 4 -1 roll dup len exch sub dup 3 1 roll
    moveto lineto lineto lineto lineto lineto
  }
  {
    exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
    moveto lineto lineto
  } ifelse
  closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_gquad_test_0008)
} def

/sequence { (\
AGCCUAGGUUUUGCCGCCUUGGCUGCUGUGACCAGAAACUGCCCAGGCCUGGGUGGGGAGUUGGGUGGGCCCUGACUCCCCUGCCCUCCAGAGGCCCCAUGUAGGGUACAUGCAGCCCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data
51 69 0.015232510 utri

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
51 55 0.010771011 ubox
51 56 0.010771011 ubox
51 57 0.000000000 ubox
51 67 0.015232510 ubox
51 68 0.000000000 ubox
52 56 0.010771011 ubox
52 57 0.010771011 ubox
52 58 0.000000000 ubox
52 68 0.015232510 ubox
52 69 0.000000000 ubox
53 57 0.010771011 ubox
53 58 0.010771011 ubox
53 69 0.015232510 ubox
55 63 0.010771011 ubox
55 64 0.000000000 ubox
56 63 0.010771011 ubox
56 64 0.010771011 ubox
56 65 0.000000000 ubox
57 63 0.000000000 ubox
57 64 0.010771011 ubox
57 65 0.010771011 ubox
58 64 0.000000000 ubox
58 65 0.010771011 ubox
63 67 0.015232510 ubox
63 68 0.000000000 ubox
64 68 0.015232510 ubox
64 69 0.000000000 ubox
65 69 0.015232510 ubox
1 5 0.008294513 ubox
1 10 0.038663832 ubox
1 19 0.067388030 ubox
1 20 0.035877928 ubox
1 24 0.417712017 ubox
1 119 0.026247074 ubox
2 9 0.054693845 ubox
2 14 0.036797694 ubox
2 15 0.012063606 ubox
2 17 0.233307210 ubox
2 18 0.074267328 ubox
2 19 0.029463150 ubox
2 20 0.029829261 ubox
2 23 0.452458730 ubox
2 48 0.008773493 ubox
2 54 0.003306680 ubox
2 95 0.017268436 ubox
2 118 0.030397976 ubox
2 119 0.004018640 ubox
3 7 0.004362246 ubox
3 8 0.055747213 ubox
3 13 0.035751395 ubox
3 16 0.234199745 ubox
3 21 0.031435335 ubox
3 22 0.456384021 ubox
3 47 0.008871602 ubox
3 53 0.003477842 ubox
3 94 0.017329122 ubox
4 8 0.003491413 ubox
4 13 0.027001877 ubox
4 16 0.034913912 ubox
4 21 0.462428591 ubox
4 22 0.006913768 ubox
4 46 0.008871310 ubox
4 52 0.003480899 ubox
4 93 0.017328660 ubox
5 13 0.013511716 ubox
5 16 0.015671275 ubox
5 21 0.015366097 ubox
5 45 0.008690852 ubox
5 51 0.003479876 ubox
5 92 0.016879722 ubox
6 10 0.009839502 ubox
6 11 0.009457065 ubox
6 12 0.014838141 ubox
6 19 0.855968939 ubox
6 20 0.049075036 ubox
6 50 0.003552762 ubox
6 119 0.005707938 ubox
7 11 0.010505257 ubox
7 12 0.012817845 ubox
7 14 0.039067477 ubox
7 15 0.360586302 ubox
7 17 0.007743063 ubox
7 18 0.923419080 ubox
7 19 0.017926418 ubox
7 43 0.008049311 ubox
7 49 0.003487294 ubox
7 89 0.007698998 ubox
7 117 0.003732766 ubox
7 118 0.005898559 ubox
7 119 0.003382667 ubox
8 12 0.004084144 ubox
8 14 0.360871640 ubox
8 15 0.011130726 ubox
8 17 0.923626513 ubox
8 18 0.017090314 ubox
8 42 0.008042260 ubox
8 88 0.007628227 ubox
8 116 0.003755240 ubox
8 117 0.004446041 ubox
8 118 0.003747632 ubox
9 13 0.337616440 ubox
9 16 0.890456468 ubox
9 41 0.007701024 ubox
9 115 0.003605548 ubox
10 16 0.032392752 ubox
11 16 0.007127171 ubox
12 16 0.003829016 ubox
13 18 0.005129586 ubox
13 23 0.009495989 ubox
13 95 0.003411700 ubox
13 113 0.003325233 ubox
13 118 0.003380713 ubox
14 22 0.009574513 ubox
14 94 0.003418612 ubox
14 112 0.003288619 ubox
15 21 0.009684380 ubox
15 93 0.003414791 ubox
16 20 0.006716254 ubox
16 48 0.025499007 ubox
16 118 0.025025350 ubox
16 119 0.003310290 ubox
17 47 0.025631453 ubox
18 46 0.025634867 ubox
19 45 0.025047077 ubox
20 45 0.003257190 ubox
21 43 0.025344501 ubox
21 44 0.004360754 ubox
21 117 0.878544746 ubox
21 118 0.078721860 ubox
22 42 0.025388073 ubox
22 43 0.004193629 ubox
22 116 0.887515345 ubox
22 117 0.055921649 ubox
23 41 0.025390581 ubox
23 115 0.891255507 ubox
24 37 0.003824884 ubox
24 114 0.896143830 ubox
25 39 0.009713383 ubox
25 42 0.040625676 ubox
25 48 0.017508762 ubox
25 102 0.003472367 ubox
25 113 0.904160096 ubox
25 116 0.420506642 ubox
25 117 0.019288633 ubox
25 118 0.004040867 ubox
26 35 0.036193275 ubox
26 41 0.040715367 ubox
26 46 0.006732472 ubox
26 47 0.017392047 ubox
26 91 0.004535594 ubox
26 101 0.003560461 ubox
26 112 0.902651086 ubox
26 115 0.422331069 ubox
27 34 0.036431101 ubox
27 45 0.008258054 ubox
27 46 0.015964204 ubox
27 90 0.004562922 ubox
27 110 0.774924573 ubox
27 112 0.048447196 ubox
27 114 0.421635153 ubox
28 33 0.036210132 ubox
28 39 0.041902502 ubox
28 44 0.008549668 ubox
28 89 0.004558544 ubox
28 109 0.792481672 ubox
28 111 0.391102347 ubox
28 113 0.418138274 ubox
29 36 0.003802494 ubox
29 38 0.042129337 ubox
29 45 0.049372907 ubox
29 99 0.003285920 ubox
29 108 0.778363694 ubox
29 110 0.438379375 ubox
29 112 0.381518220 ubox
29 114 0.003181495 ubox
30 39 0.009909755 ubox
30 42 0.006087925 ubox
30 43 0.009149601 ubox
30 44 0.057188598 ubox
30 88 0.004175021 ubox
30 98 0.003307763 ubox
30 107 0.550969058 ubox
30 109 0.478623187 ubox
30 111 0.259648132 ubox
30 113 0.004286076 ubox
31 87 0.003971216 ubox
31 107 0.787673937 ubox
31 111 0.035868910 ubox
32 41 0.005704813 ubox
32 47 0.003273524 ubox
32 52 0.009279914 ubox
32 104 0.003648301 ubox
32 105 0.119661366 ubox
32 106 0.958281654 ubox
32 112 0.007629427 ubox
33 41 0.070919040 ubox
33 46 0.003443035 ubox
33 51 0.009417481 ubox
33 104 0.111987005 ubox
33 105 0.957865884 ubox
33 106 0.009127993 ubox
33 112 0.026501249 ubox
34 40 0.072536261 ubox
34 50 0.009541745 ubox
34 100 0.004692538 ubox
34 102 0.044896048 ubox
34 107 0.038306136 ubox
34 111 0.030863562 ubox
35 39 0.071290486 ubox
35 42 0.010227721 ubox
35 43 0.007368569 ubox
35 44 0.016064291 ubox
35 49 0.009538621 ubox
35 100 0.003998797 ubox
35 102 0.021741280 ubox
35 107 0.018591257 ubox
35 109 0.047350016 ubox
35 111 0.006309444 ubox
36 100 0.037258437 ubox
36 102 0.067891907 ubox
36 107 0.149791409 ubox
36 111 0.006920393 ubox
37 100 0.023649949 ubox
37 102 0.015896994 ubox
37 107 0.010327830 ubox
37 111 0.017180141 ubox
38 100 0.037620978 ubox
38 102 0.120936827 ubox
38 107 0.008245238 ubox
38 111 0.006744577 ubox
39 46 0.006593436 ubox
39 47 0.003431304 ubox
39 101 0.125418581 ubox
39 104 0.969064262 ubox
39 105 0.007909235 ubox
39 106 0.008448910 ubox
39 115 0.008631592 ubox
40 45 0.006734696 ubox
40 46 0.003427127 ubox
40 99 0.099559388 ubox
40 101 0.008363508 ubox
40 103 0.972384679 ubox
40 104 0.006684680 ubox
40 105 0.007936613 ubox
40 108 0.070304132 ubox
40 110 0.004290898 ubox
40 114 0.008684555 ubox
41 48 0.010105739 ubox
41 54 0.023492033 ubox
41 95 0.105631958 ubox
41 96 0.008102009 ubox
41 97 0.035377103 ubox
41 98 0.101853083 ubox
41 100 0.013411574 ubox
41 102 0.972789832 ubox
41 107 0.077609831 ubox
41 109 0.003727128 ubox
41 113 0.008684125 ubox
42 47 0.010152342 ubox
42 53 0.025452351 ubox
42 94 0.106223856 ubox
42 101 0.970716634 ubox
42 105 0.004031212 ubox
42 106 0.079603261 ubox
42 112 0.008026081 ubox
43 52 0.025472912 ubox
43 93 0.106165110 ubox
43 94 0.007969165 ubox
43 101 0.030912858 ubox
43 104 0.004372071 ubox
43 105 0.079617270 ubox
44 51 0.025469199 ubox
44 74 0.014857411 ubox
44 91 0.098327869 ubox
44 93 0.008368420 ubox
44 101 0.033826784 ubox
44 104 0.079164862 ubox
45 50 0.022943934 ubox
45 73 0.014922279 ubox
45 100 0.046781414 ubox
45 102 0.033608942 ubox
46 72 0.014913258 ubox
46 88 0.003171573 ubox
46 89 0.106083289 ubox
46 96 0.985146720 ubox
46 97 0.111181334 ubox
46 98 0.010948048 ubox
47 71 0.014886929 ubox
47 88 0.106113893 ubox
47 89 0.009877455 ubox
47 95 0.989834707 ubox
47 96 0.078817768 ubox
47 97 0.007314616 ubox
47 102 0.009854969 ubox
48 93 0.006199806 ubox
48 94 0.992973257 ubox
48 101 0.009879342 ubox
49 91 0.022318835 ubox
49 93 0.992737745 ubox
49 94 0.004311649 ubox
50 90 0.039542735 ubox
50 91 0.062436617 ubox
50 92 0.984036615 ubox
50 93 0.004818820 ubox
50 99 0.009878027 ubox
51 85 0.024992781 ubox
51 86 0.996402977 ubox
51 87 0.054122628 ubox
51 88 0.020352213 ubox
51 89 0.036631424 ubox
51 98 0.009956617 ubox
52 84 0.024938810 ubox
52 85 0.997164611 ubox
52 86 0.053971361 ubox
52 87 0.007482737 ubox
52 88 0.029194333 ubox
52 89 0.009232861 ubox
52 97 0.009954892 ubox
53 82 0.003469117 ubox
53 84 0.997506669 ubox
53 85 0.051516720 ubox
53 86 0.010667858 ubox
53 87 0.014512533 ubox
53 88 0.008960339 ubox
53 96 0.009897640 ubox
54 83 0.963573160 ubox
55 81 0.982503019 ubox
55 82 0.180456537 ubox
55 86 0.003384638 ubox
56 80 0.987468732 ubox
56 81 0.156934182 ubox
57 79 0.991614469 ubox
57 80 0.128218776 ubox
58 78 0.995735254 ubox
58 79 0.090830315 ubox
59 77 0.999696447 ubox
60 76 0.999847997 ubox
61 74 0.028117435 ubox
61 75 0.998670827 ubox
62 74 0.975754457 ubox
62 75 0.005030904 ubox
63 71 0.038996578 ubox
63 72 0.519615597 ubox
63 73 0.849594993 ubox
64 70 0.039316572 ubox
64 71 0.522025410 ubox
64 72 0.851799993 ubox
64 73 0.006181908 ubox
65 70 0.520803686 ubox
65 71 0.847814273 ubox
65 72 0.007275967 ubox
67 71 0.004037122 ubox
78 94 0.003367994 ubox
79 93 0.003618645 ubox
79 94 0.003366170 ubox
79 106 0.010690505 ubox
80 93 0.003558051 ubox
80 105 0.010783066 ubox
81 91 0.006118092 ubox
81 104 0.010812945 ubox
82 90 0.006224397 ubox
82 103 0.010818671 ubox
82 108 0.021985103 ubox
83 89 0.006203104 ubox
83 95 0.015540097 ubox
83 102 0.010674114 ubox
83 107 0.024769129 ubox
84 94 0.015462622 ubox
84 101 0.010663244 ubox
84 106 0.025072979 ubox
85 93 0.015302124 ubox
85 94 0.010980497 ubox
85 105 0.025077127 ubox
86 91 0.011125975 ubox
86 93 0.011247375 ubox
86 104 0.025078205 ubox
87 91 0.010944662 ubox
87 92 0.011216874 ubox
87 103 0.024518895 ubox
88 101 0.003320580 ubox
89 101 0.024501870 ubox
90 100 0.024240790 ubox
90 119 0.023770016 ubox
91 98 0.012793097 ubox
91 118 0.026385387 ubox
92 119 0.003683179 ubox
93 97 0.008480410 ubox
93 98 0.008999181 ubox
93 109 0.003746993 ubox
93 117 0.033249188 ubox
93 118 0.003352075 ubox
94 107 0.009917985 ubox
94 116 0.033362511 ubox
95 106 0.011481172 ubox
95 115 0.033421379 ubox
96 105 0.011993732 ubox
96 106 0.033044503 ubox
97 101 0.006428915 ubox
97 104 0.014540316 ubox
97 105 0.039569478 ubox
97 106 0.014618943 ubox
98 104 0.040741313 ubox
98 105 0.014699394 ubox
98 112 0.068612987 ubox
99 111 0.072137339 ubox
100 110 0.072607530 ubox
101 109 0.072782520 ubox
102 108 0.072280705 ubox
103 107 0.064077111 ubox
103 119 0.041809193 ubox
104 109 0.003321931 ubox
104 118 0.048199247 ubox
105 117 0.049011884 ubox
106 116 0.049014017 ubox
107 115 0.048344010 ubox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
21 117 0.9500000 lbox
22 116 0.9500000 lbox
23 115 0.9500000 lbox
24 114 0.9500000 lbox
25 113 0.9500000 lbox
26 112 0.9500000 lbox
27 110 0.9500000 lbox
28 109 0.9500000 lbox
29 108 0.9500000 lbox
30 107 0.9500000 lbox
32 106 0.9500000 lbox
33 105 0.9500000 lbox
39 104 0.9500000 lbox
40 103 0.9500000 lbox
41 102 0.9500000 lbox
42 101 0.9500000 lbox
46 96 0.9500000 lbox
47 95 0.9500000 lbox
48 94 0.9500000 lbox
49 93 0.9500000 lbox
50 92 0.9500000 lbox
51 86 0.9500000 lbox
52 85 0.9500000 lbox
53 84 0.9500000 lbox
54 83 0.9500000 lbox
55 81 0.9500000 lbox
56 80 0.9500000 lbox
57 79 0.9500000 lbox
58 78 0.9500000 lbox
59 77 0.9500000 lbox
60 76 0.9500000 lbox
61 75 0.9500000 lbox
62 74 0.9500000 lbox
63 73 0.9500000 lbox
64 72 0.9500000 lbox
65 71 0.9500000 lbox
showpage
end
%%EOF
